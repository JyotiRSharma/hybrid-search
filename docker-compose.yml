services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: ["5432:5432"]
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
      - ./data:/import
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks: ["appnet"]

  api:
    build: .
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/postgres
      KW_WEIGHT: "0.5"
      VEC_WEIGHT: "0.5"
    depends_on:
      db:
        condition: service_healthy
    ports: ["8000:8000"]
    networks: ["appnet"]

  backfill_worker_0:
    build: .
    command: python scripts/backfill_embeddings.py --dsn postgresql://postgres:postgres@db:5432/postgres --only-null --workers 4 --me 0 --fetch-batch 256 --encode-batch 64 --cooldown 0.15
    depends_on:
      db:
        condition: service_healthy
    profiles: ["jobs"]
    networks: ["appnet"]

  backfill_worker_1:
    build: .
    command: python scripts/backfill_embeddings.py --dsn postgresql://postgres:postgres@db:5432/postgres --only-null --workers 4 --me 1 --fetch-batch 256 --encode-batch 64 --cooldown 0.15
    depends_on:
      db:
        condition: service_healthy
    profiles: ["jobs"]
    networks: ["appnet"]

  backfill_worker_2:
    build: .
    command: python scripts/backfill_embeddings.py --dsn postgresql://postgres:postgres@db:5432/postgres --only-null --workers 4 --me 2 --fetch-batch 256 --encode-batch 64 --cooldown 0.15
    depends_on:
      db:
        condition: service_healthy
    profiles: ["jobs"]
    networks: ["appnet"]

  backfill_worker_3:
    build: .
    command: python scripts/backfill_embeddings.py --dsn postgresql://postgres:postgres@db:5432/postgres --only-null --workers 4 --me 3 --fetch-batch 256 --encode-batch 64 --cooldown 0.15
    depends_on:
      db:
        condition: service_healthy
    profiles: ["jobs"]
    networks: ["appnet"]

networks:
  appnet:
    name: hybrid-search-net   # <â€” fixed, human-readable network name